<!-- -The console returns errors if the user enters a query with just spaces.

 - How would your app handle situations where the Google API was down or unusually slow to respond?

 -There would be additional value if you tested error cases, not just the "happy path".

- The README would not provide any instructions on what the setup requirements are, how to install the app on their local development environment, or how to run the tests.

- If the code needed to be adapted to support a mobile app UI or a command-line UI, how could you structure your code base so that it could be reusable in those contexts? -->

<html>
  <head>
    <title>Google Book API Search</title>
    <style type="text/css"></style>
    <script type="text/javascript" src="/search_interface.ejs"></script>
  </head>
  <body>



    <div id="top_area">
      <div id="search_bar_area">
        Please input a book title/author/publisher:<br>
        <input id="bookquery"><br>
        <button id="search_button"; onclick = "capture_search_term(); button_swap(); return false;">Get Results</button>
      </div>
      <button id="reload_button"; style="visibility:hidden"; onclick = location.reload();>Try a new search?</button>
    </div>
    <div id="results"></div>

 
    <script>
      function capture_search_term() {
        var booksearch = document.getElementById('bookquery').value;    
        check_query(booksearch) 
      }

      function button_swap() {
        var reload = document.getElementById("reload_button");
        var search = document.getElementById("search_bar_area");
        document.getElementById("reload_button").style.visibility = 'visible';
        document.getElementById("search_button").style.visibility = 'hidden';
        top_area.replaceChild(reload, search);
        }   

      function printError() {
        document.getElementById("results").innerHTML += "Sorry, there seems to be an error."
      }

      function printResults(book_hash) {
         document.getElementById("results").innerHTML += 
          "<br>" + "<a href = " + book_hash['info'] + ">"+ book_hash['title'] + "</a>" +
          "<br>" + book_hash['authors'] + 
          "<br>" + book_hash['publisher'] + 
          "<br>" + "<img src = " + book_hash['cover'] + ">" + "<br>";
      } 
        
      function check_query(booksearch) {        
        if (booksearch.trim === '' ) {
          alert("Please input a title/author/publishing house.");
        }
        else {
          booksearch = booksearch.replace(/\s/g, '+');
          call_api(booksearch)
        }            
      }

      function call_api(booksearch) {
        fetch('https://www.googleapis.com/books/v1/volumes?q=' + booksearch)
          .then(function(response) {
            return response.json();
          })
          .then(function(myJson) {
            console.log(JSON.stringify(myJson));
            bookInfo(myJson);
          })
          .catch(error => {
            console.log('Connection Error');
            printError();
          });
      }

      function bookInfo(response) {
      for (var i = 0; i < response.items.length; i++) {
        var item = response.items[i];
        var book_hash = {}
        book_hash['info'] = item.volumeInfo.infoLink
        book_hash['title'] = item.volumeInfo.title
        book_hash['authors'] = item.volumeInfo.authors
        book_hash['publisher'] = item.volumeInfo.publisher
        book_hash['cover'] = item.volumeInfo.imageLinks.thumbnail
        printResults(book_hash)
      }
    
    </script>

  </body>
</html>